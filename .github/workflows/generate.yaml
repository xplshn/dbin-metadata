name: Generate Metadata

on:
  workflow_dispatch:
    inputs:
      allow_large_size_loss:
        description: 'Allow committing files with size loss >= 500 KB (warning only)'
        type: boolean
        default: false
  schedule:
    - cron: "0,30 * * * *"

jobs:
  gen-metadata:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git curl zstd gzip
          export DBIN_INSTALL_DIR="$PWD"
          wget -qO- "https://raw.githubusercontent.com/xplshn/dbin/master/stubdl" | sh -s -- add dbin
          echo "V=$(./dbin -v | awk '{print $3}')" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: master
          fetch-depth: 1
          filter: "blob:none"

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Setup Environment Variables
        run: |
          echo "SYSTMP=$(dirname $(mktemp -u))" >> $GITHUB_ENV
          echo "TOTAL_GENERATORS=4" >> $GITHUB_ENV
          echo "SUCCESSFUL_GENERATORS=0" >> $GITHUB_ENV

      - name: Run Metadata Generators
        run: |
          run_generator() {
            local script_url="$1" folder_name="$2" before_size=0 after_size size_diff
            [ -d "$GITHUB_WORKSPACE/master/misc/cmd/$folder_name" ] && before_size=$(du -sb "$GITHUB_WORKSPACE/master/misc/cmd/$folder_name" 2>/dev/null | awk '{print $1}')
            mkdir -p "$GITHUB_WORKSPACE/master/misc/cmd/$folder_name"
            curl -sL "$script_url" -o "$GITHUB_WORKSPACE/master/misc/cmd/$folder_name/main.go"
            cd "$GITHUB_WORKSPACE/master/misc/cmd/$folder_name" || return 1
            go mod init "github.com/xplshn/$folder_name"
            go mod tidy
            go run ./main.go && {
              local cborZstCount=$(find . -name "*.cbor.zst" -type f -size +0b | wc -l)
              [ "$cborZstCount" -gt 0 ] && {
                echo "Generator $folder_name succeeded" >&2
                SUCCESSFUL_GENERATORS=$((SUCCESSFUL_GENERATORS + 1))
                echo "SUCCESSFUL_GENERATORS=$SUCCESSFUL_GENERATORS" >> $GITHUB_ENV
                rm -f ./*.zst ./*.gz
                zstd -k ./*.json ./*.yaml ./*.cbor ./*.msgp ./*.txt 2>/dev/null
                gzip ./*.json ./*.yaml ./*.cbor ./*.msgp ./*.txt 2>/dev/null
              } || { echo "No .cbor.zst files generated by $folder_name" >&2; return 1; }
            } || { echo "Generator $folder_name failed" >&2; return 1; }
            after_size=$(du -sb "$GITHUB_WORKSPACE/master/misc/cmd/$folder_name" >/dev/null | awk '{print $1}')
            size_diff=$((after_size - before_size))
            [ "$size_diff" -lt -500000 ] && {
              echo "Warning: Size of files in $folder_name decreased by more than 500 KB ($size_diff bytes)" >&2
              [ "${{ github.event.inputs.allow_large_size_loss }}" != "true" ] && echo "$folder_name" >> "$GITHUB_WORKSPACE/excluded_files.txt"
            }
          }
          : > "$GITHUB_WORKSPACE/excluded_files.txt"
          run_generator "https://raw.githubusercontent.com/xplshn/dbin/master/misc/cmd/flatpakAppStreamScrapper/scrapper.go" "flatpakAppStreamScrapper" || true
          run_generator "https://raw.githubusercontent.com/xplshn/dbin/master/misc/cmd/dbinRepoIndexGenerators/1.7/generator.go" "1.7" || true && {
            cp -r "$GITHUB_WORKSPACE/master/misc/cmd/1.7" "$GITHUB_WORKSPACE/master/misc/cmd/1.6"
            cp -r "$GITHUB_WORKSPACE/master/misc/cmd/1.7" "$GITHUB_WORKSPACE/master/misc/cmd/1.5"
            cp -r "$GITHUB_WORKSPACE/master/misc/cmd/1.7" "$GITHUB_WORKSPACE/master/misc/cmd/1.4"
          }
          #run_generator "https://raw.githubusercontent.com/xplshn/dbin/master/misc/cmd/dbinRepoIndexGenerators/1.6/generator.go" "1.6" || true
          #run_generator "https://raw.githubusercontent.com/xplshn/dbin/master/misc/cmd/dbinRepoIndexGenerators/1.5/generator.go" "1.5" || true
          #run_generator "https://raw.githubusercontent.com/xplshn/dbin/master/misc/cmd/dbinRepoIndexGenerators/1.4/generator.go" "1.4" || true
          run_generator "https://raw.githubusercontent.com/xplshn/dbin/master/misc/cmd/dbinRepoIndexGenerators/1.3/generator.go" "1.3" || true

      - name: Determine Metadata Generation Success
        run: |
          [ "$SUCCESSFUL_GENERATORS" -gt 0 ] && {
            echo "HAS_META=TRUE" >> $GITHUB_ENV
            echo "Metadata generation partially or fully successful"
          } || {
            echo "HAS_META=FALSE" >> $GITHUB_ENV
            echo "No successful metadata generators"
          }

      - name: Commit and Push Metadata
        if: env.HAS_META == 'TRUE'
        run: |
          cd "$GITHUB_WORKSPACE/master" || exit 1
          git config user.name 'xplshn'
          git config user.email 'anto@xplshn.com.ar'
          git add --all
          while IFS= read -r EXCLUDED_FILE; do
            [ -n "$EXCLUDED_FILE" ] && git reset -- "$EXCLUDED_FILE"
          done < "$GITHUB_WORKSPACE/excluded_files.txt"
          if ! git diff --cached --quiet; then
            UTC_TIME=$(TZ='UTC' date +'%Y-%m-%d (%I:%M:%S %p)')
            git commit -m "Update repository index files <-- $UTC_TIME" || exit 1
            git push origin master || exit 1
            echo "Successfully committed and pushed changes"
            echo "RESET_STATUS=SUCCESS" >> $GITHUB_ENV
          else
            echo "No changes to commit"
            echo "RESET_STATUS=SKIPPED" >> $GITHUB_ENV
          fi
          #git gc --prune=now --aggressive --force

      - name: Report Metadata Generation Status
        run: |
          [ "$HAS_META" = "FALSE" ] && { echo "No successful metadata generators found."; exit 1; }
          [ "$SUCCESSFUL_GENERATORS" -lt "$TOTAL_GENERATORS" ] && echo "WARNING: Only $SUCCESSFUL_GENERATORS out of $TOTAL_GENERATORS metadata generators succeeded."
          exit 0
